/**
 * @classDescription 模拟Marquee，无间断滚动内容
 * @author Aken Li(www.kxbd.com)
 * @DOM
 *  	<div id="marquee">
 *  		<ul>
 *   			<li></li>
 *   			<li></li>
 *  		</ul>
 *  	</div>
 * @CSS
 *  	#marquee {overflow:hidden;width:200px;height:50px;}
 * @Usage
 *  	$("#marquee").kxbdMarquee(options);
 * @options
 *		isEqual:true,		//所有滚动的元素长宽是否相等,true,false
 *  	loop:0,				//循环滚动次数，0时无限
 *		direction:"left",	//滚动方向，"left","right","up","down"
 *		scrollAmount:1,		//步长
 *		scrollDelay:20		//时长
 */
(function($){
	$.fn.kxbdMarquee=function(options){
		var opts=$.extend({},$.fn.kxbdMarquee.defaults, options);
		var moveId//=this.defaults.moveId;
		
		try{clearInterval(opts.moveId);}catch(ee){}
		
		this.removeThis = function(){
			$(this).unbind();
			$(this).scrollTop(0);
			$(this).scrollLeft(0);
			opts.kids.remove();
			clearInterval(opts.moveId);
		}

		return this.each(function(){
			var $marquee=$(this);				//滚动元素容器
			var _scrollObj=$marquee.get(0);		//滚动元素容器DOM
			var scrollW=$marquee.width();		//滚动元素容器的宽度
			var scrollH=$marquee.height();		//滚动元素容器的高度
			var $element=$marquee.children();	//滚动元素
			var $kids=$element.children();		//滚动子元素
			var scrollSize=0;					//滚动元素尺寸
			
			opts.kids=$kids;

			//滚动类型，1左右，0上下
			var _type=(opts.direction=="left"||opts.direction=="right") ? 1:0;

			//防止滚动子元素比滚动元素宽而取不到实际滚动子元素宽度
			$element.css(_type?"width":"height",10000);

			//获取滚动元素的尺寸
			if(opts.isEqual){
				scrollSize=$kids[_type?"outerWidth":"outerHeight"]()*$kids.length;
			}else{
				$kids.each(function(){
					scrollSize+=$(this)[_type?"outerWidth":"outerHeight"]();
				});
			};

			//滚动元素总尺寸小于容器尺寸，不滚动
			if(scrollSize<(_type?scrollW:scrollH)){return;}; 

			//克隆滚动子元素将其插入到滚动元素后，并设定滚动元素宽度
			ele_ml = $element.children().css("margin-left").replace("px","");
			ele_mr = $element.children().css("margin-right").replace("px","");
			ele_martt = parseInt(ele_ml)+parseInt(ele_mr);
			
			ele_mt = $element.children().css("margin-top").replace("px","");
			ele_mb = $element.children().css("margin-bottom").replace("px","");
			ele_marVtt = parseInt(ele_mt)+parseInt(ele_mb);
			
			scrollSize += (opts.direction=="left"||opts.direction=="right") ? ele_martt*$kids.length:ele_marVtt*$kids.length;
			
			$element.append($kids.clone()).css(_type?"width":"height",scrollSize*2);

			var numMoved=0;
			function scrollFunc(){
				scrollSize=(opts.direction=="left"||opts.direction=="right") ? ($element.width()/2):($element.height()/2);
				var _dir=(opts.direction=="left"||opts.direction=="right") ? "scrollLeft":"scrollTop";
				if (opts.loop>0) {
					numMoved+=opts.scrollAmount;
					if(numMoved>scrollSize*opts.loop){
						_scrollObj[_dir]=0;
						return clearInterval(opts.moveId);
					};
				};

				if(opts.direction=="left"||opts.direction=="up"){
					var newPos=_scrollObj[_dir]+opts.scrollAmount;
					if(newPos>=scrollSize){
						newPos-=scrollSize;
					}
					_scrollObj[_dir]=newPos;
				}else{
					var newPos=_scrollObj[_dir]-opts.scrollAmount;
					if(newPos<=0){
						newPos += scrollSize;
					};
					_scrollObj[_dir]=newPos;
				};
			};

			//滚动开始
			//moveId=setInterval(scrollFunc, opts.scrollDelay);
			opts.moveId=setInterval(scrollFunc, opts.scrollDelay);

			//鼠标划过停止滚动
			$marquee.unbind();
			$marquee.hover(function(){
				clearInterval(opts.moveId);
			},function(){
				clearInterval(opts.moveId);
				opts.moveId=setInterval(scrollFunc, opts.scrollDelay);
			});
			if(opts.fastLeft){
				$(opts.fastLeft).hover(function(){
					opts.scrollDelay=opts.scrollDelay/5;
					opts.direction="right";
					clearInterval(opts.moveId);
					opts.moveId=setInterval(scrollFunc, opts.scrollDelay);
				},function(){
					opts.scrollDelay=opts.scrollDelay*5;
					opts.direction="left";
					clearInterval(opts.moveId);
					opts.moveId=setInterval(scrollFunc, opts.scrollDelay);
				});
			}
			if(opts.fastRight){
				$(opts.fastRight).hover(function(){
					opts.scrollDelay=opts.scrollDelay/5;
					opts.direction="left";
					clearInterval(opts.moveId);
					opts.moveId=setInterval(scrollFunc, opts.scrollDelay);
				},function(){
					opts.scrollDelay=opts.scrollDelay*5;
					opts.direction="left";
					clearInterval(opts.moveId);
					opts.moveId=setInterval(scrollFunc, opts.scrollDelay);
				});
			}
		});
	};

	$.fn.kxbdMarquee.defaults={
		isEqual:true,		//所有滚动的元素长宽是否相等,true,false
		loop: 0,			//循环滚动次数，0时无限
		direction: "left",	//滚动方向，"left","right","up","down"
		scrollAmount:1,		//步长
		scrollDelay:20,		//时长
		fastLeft:null,		//快速左移动 modify by huangping
		fastright:null,		//快速右移动 modify by huangping
		moveId:null
	};

	$.fn.kxbdMarquee.setDefaults=function(settings) {
		$.extend( $.fn.kxbdMarquee.defaults, settings );
	};
	
})(jQuery);